<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring" xmlns:task="http://www.springframework.org/schema/task"

	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		   http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/task 
        http://www.springframework.org/schema/task/spring-task-3.2.xsd">

	<mvc:annotation-driven />
	<mvc:resources mapping="/resources/**" location="classpath:/resources" />
	<context:property-placeholder location="classpath*:*application*.properties" />

<!-- 	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".html" />
	</bean>
 -->
	<bean id="umsClientService"
		class="com.snapdeal.ums.client.services.impl.UMSClientServiceImpl">
		<property name="webServiceBaseURL" value="${snapdeal.identity.ums.url}/service/ums" />
	</bean>

	<bean class="com.snapdeal.base.startup.config.AppEnvironmentContext"
		id="appEnvironmentContext">
		<constructor-arg value="IDM" />
	</bean>


 	<!-- Task scheduler for Cache Update. -->
<!-- 	<task:scheduled-tasks scheduler="scheduler">
		<task:scheduled ref="CacheUpdater" method="loadAll"
			fixed-delay="${snapdeal.identity.manager.cacheUpdater.delay}" />
	</task:scheduled-tasks>
	<task:scheduler id="scheduler" pool-size="1" />
 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName"
			value="${snapdeal.identity.manager.database.driverClassName}" />
		<property name="url" value="${snapdeal.identity.manager.database.url}" />
		<property name="username"
			value="${snapdeal.identity.manager.database.username}" />
		<property name="password"
			value="${snapdeal.identity.manager.database.password}" />
		<property name="initialSize"
			value="${snapdeal.identity.manager.database.inititalsize}" />
		<property name="maxActive"
			value="${snapdeal.identity.manager.database.maxactive}" />
		<property name="maxWait"
			value="${snapdeal.identity.manager.database.maxwait}" />
	</bean>

	<!-- MyBatis related beans -->
	<bean id="sqlSessionFactoryMybatis" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:myBatis/sqlmap-config.xml" />
	</bean>

	<bean name="myBatisIMSDB" id="myBatisIMSDB"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactoryMybatis" />
		<constructor-arg index="1" value="REUSE" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.snapdeal.admin.dao" />
		<property name="sqlSessionTemplateBeanName" value="myBatisIMSDB"></property>
	</bean>

	<!-- <mvc:interceptors> <mvc:interceptor> <mvc:mapping path="/api/v1/identity/client/createClient" 
		/> <mvc:mapping path="/api/v1/identity/client/deactivateClient" /> <mvc:mapping 
		path="/api/v1/identity/client/regenerateClientKey" /> <mvc:mapping path="/api/v1/identity/client/getClientById" 
		/> <mvc:mapping path="/api/v1/identity/client/getClientByType" /> <mvc:mapping 
		path="/api/v1/identity/client/getClientByName" /> <mvc:mapping path="/api/v1/identity/client/getClientByStatus" 
		/> <mvc:mapping path="/api/v1/identity/client/getClientByPlatform" /> <bean 
		class="com.snapdeal.identity.manager.interceptor.ClientRequestInterceptor" 
		/> </mvc:interceptor> </mvc:interceptors> -->

</beans>
