<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">


	<!-- Activate @Configurable injection -->
	<context:spring-configured />
	<import resource="activemq-config-context.xml" />

	<bean class="com.snapdeal.base.audit.aspect.AuditingAspect"
	id="AuditingAspect" lazy-init="false">
	</bean>
	
	<!-- bean for ims client -->
	<bean class="com.snapdeal.ims.client.impl.UserServiceClientImpl"
		id="imsUserClientService">
	</bean>


	<!-- enable auto-scan for all @Repository, @Service, @Controller java files 
		for beans -->
	<context:component-scan
		base-package="com.snapdeal.ums.admin.sdwallet, com.snapdeal.ums.dao.user.sdwallet, com.snapdeal.server.services.sdwallet" />
	<context:component-scan base-package="com.snapdeal.ums, com.snapdeal">
		<context:exclude-filter type="regex"
			expression="com\.snapdeal\.scheduling\..*" />
		<context:exclude-filter type="regex"
			expression="com\.snapdeal\.concurrent\.cache\..*" />
	</context:component-scan>

	<bean id="umsSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/UMSDS" />
		<property name="resourceRef" value="true" />
	</bean>

	<bean id="snapdealSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/SnapdealDS" />
		<property name="resourceRef" value="true" />
	</bean>


	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!-- define session factor for hibernate -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="umsSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.snapdeal.ums.core.entity" />
		<!-- <property name="annotatedClasses"> -->
		<!-- <list> -->
		<!-- <value>com.snapdeal.ums.core.entity.SDWalletHistory</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.UserAddress</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.SDWalletActivityType</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.SDWallet</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.CsZentrix</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.UserInformation</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.MobileSubscriber</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.SDWalletTransaction</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.ESPProfileField</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.User</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.EmailSubscriberDetail</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.ZendeskUser</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.AffiliateSubscriptionOffer -->
		<!-- </value> -->
		<!-- <value>com.snapdeal.ums.core.entity.Role</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.UserOpenidMapping</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.UserReferral</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.EmailBulkEspCityMapping</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.NewsletterEspMapping</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.EmailSubscriber</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.facebook.FacebookUser</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.facebook.FacebookLike</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.EmailMobileAssociation</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.ESPFilterCityMapping</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.SubscriberProfile</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.CustomerMobileScore</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.SmsScheduler</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.CustomerEmailScore</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.CustomerFilter</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.UserPreference</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.MobileSubscriberDetail</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.Newsletter</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.UserReferralTracking</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.EmailServiceProvider</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.UserRole</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.UmsTask</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.TaskParameter</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.AccessControl</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.Locality</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.EmailTemplate</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.SmsTemplate</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.UMSProperty</value> -->
		<!-- <value>com.snapdeal.ums.core.entity.ServerInfo</value> -->
		<!-- </list> -->
		<!-- </property> -->
	</bean>


	<!-- add platform transaction manager -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="clusteredScheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="schedulerName" value="clusteredScheduler" />
		<property name="autoStartup" value="false" />
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
		<property name="waitForJobsToCompleteOnShutdown" value="true" />
		<property name="overwriteExistingJobs" value="true" />
		<property name="dataSource">
			<ref bean="umsSource" />
		</property>
		<property name="transactionManager">
			<ref bean="txManager" />
		</property>
		<property name="quartzProperties">
			<props>
				<!-- Job store -->
				<prop key="org.quartz.jobStore.misfireThreshold">6000000</prop>
				<prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.StdJDBCDelegate
				</prop>

				<prop key="org.quartz.jobStore.isClustered">true</prop>
				<prop key="org.quartz.jobStore.clusterCheckinInterval">20000</prop>

				<prop key="org.quartz.scheduler.instanceName">ClusteredScheduler</prop>
				<prop key="org.quartz.scheduler.instanceId">AUTO</prop>
				<prop key="org.quartz.scheduler.jmx.export">true</prop>
			</props>
		</property>
	</bean>

	<bean id="concurrentScheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="schedulerName" value="concurrentScheduler" />
		<property name="autoStartup" value="false" />
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
		<property name="waitForJobsToCompleteOnShutdown" value="true" />
		<property name="overwriteExistingJobs" value="true" />
		<property name="dataSource">
			<ref bean="umsSource" />
		</property>
		<property name="transactionManager">
			<ref bean="txManager" />
		</property>
	</bean>

	<!-- enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="txManager" />

	<aop:aspectj-autoproxy />
	<task:annotation-driven />

	<bean class="com.snapdeal.base.startup.config.AppEnvironmentContext"
		id="appEnvironmentContext"  lazy-init="false">
		<constructor-arg value="UMSAdmin" />
	</bean>
    
    <bean id="aerospikeClient" class="com.aerospike.client.AerospikeClient">
        <constructor-arg index="0" value="54.165.247.54"></constructor-arg>
        <constructor-arg index="1" value="3000"></constructor-arg>
    </bean>


</beans>