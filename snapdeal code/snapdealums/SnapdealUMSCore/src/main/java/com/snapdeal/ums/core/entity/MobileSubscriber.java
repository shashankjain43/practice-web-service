package com.snapdeal.ums.core.entity;

// Generated 16 Aug, 2010 10:08:39 PM by Hibernate Tools 3.2.4.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import com.snapdeal.ums.core.utils.QueryNames;

/**
 * MobileSubscriber generated by hbm2java
 */
@Entity
@Table(name = "mobile_subscriber", catalog = "ums", uniqueConstraints = @UniqueConstraint(columnNames = { "mobile", "zone_id" }))
@NamedQueries({
        @NamedQuery(name = QueryNames.GET_MOBILE_SUBSCRIBER_FROM_MOBILE, query = "from MobileSubscriber where mobile = :" + QueryNames.QueryParameters.MOBILE + " and zoneId = :"
                + QueryNames.QueryParameters.ZONE_ID),
        @NamedQuery(name = QueryNames.GET_MOBILE_SUBSCRIBERS_FROM_ZONE, query = "from MobileSubscriber where subscribed = 1 and zone_id = :" + QueryNames.QueryParameters.ZONE_ID
                + " and created >= :" + QueryNames.QueryParameters.STARTTIME + " and created <= :" + QueryNames.QueryParameters.ENDTIME) })
public class MobileSubscriber implements java.io.Serializable {

    private static final long serialVersionUID = 1258171019006064474L;
    private Integer           id;
    private String            mobile;
    private int               zoneId;
    private Boolean           subscribed;
    private Date              created;
    private String            subscriptionPage;
    private String            pin;
    private String            reasonUnsubscription;
    private String            suggestionUnsubscription;
    private String            channelCode;
    private String            affiliateTrackingCode;
    private boolean           dnd;
    private boolean           invalid;
    private boolean           verified;
    private Date              updated;
    private boolean           customer;

    public MobileSubscriber() {
    }

    public MobileSubscriber(String mobile, int zoneId) {
        this.mobile = mobile;
        this.zoneId = zoneId;
    }

    public MobileSubscriber(String mobile, int zoneId, Boolean subscribed) {
        this.mobile = mobile;
        this.zoneId = zoneId;
        this.subscribed = subscribed;
    }

    public MobileSubscriber(MobileSubscriber mobileSubscriber) {
        this.mobile = mobileSubscriber.getMobile();
        this.pin = mobileSubscriber.getPin();
        this.reasonUnsubscription = mobileSubscriber.getReasonUnsubscription();
        this.suggestionUnsubscription = mobileSubscriber.getSuggestionUnsubscription();
        this.channelCode = mobileSubscriber.getChannelCode();
        this.dnd = mobileSubscriber.isDnd();
        this.invalid = mobileSubscriber.isInvalid();
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "mobile", nullable = false, length = 10)
    public String getMobile() {
        return this.mobile;
    }

    public void setMobile(String mobile) {
        this.mobile = mobile;
    }

    @Column(name = "verified", nullable = false)
    public boolean isVerified() {
        return this.verified;
    }

    public void setVerified(boolean verified) {
        this.verified = verified;
    }

    @Column(name = "zone_id", nullable = false)
    public int getZoneId() {
        return this.zoneId;
    }

    public void setZoneId(int zoneId) {
        this.zoneId = zoneId;
    }

    @Column(name = "subscribed")
    public Boolean getSubscribed() {
        return this.subscribed;
    }

    public void setSubscribed(Boolean subscribed) {
        this.subscribed = subscribed;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created", nullable = false, length = 19)
    public Date getCreated() {
        return this.created;
    }

    public void setCreated(Date created) {
        this.created = created;
    }

    @Column(name = "subscription_page", nullable = true, length = 32)
    public String getSubscriptionPage() {
        return this.subscriptionPage;
    }

    public void setSubscriptionPage(String subscriptionPage) {
        this.subscriptionPage = subscriptionPage;
    }

    @Column(name = "pin", nullable = true, length = 20)
    public String getPin() {
        return this.pin;
    }

    public void setPin(String pin) {
        this.pin = pin;
    }

    public void setReasonUnsubscription(String reasonUnsubscription) {
        this.reasonUnsubscription = reasonUnsubscription;
    }

    @Column(name = "reason_unsubscription", nullable = true, length = 256)
    public String getReasonUnsubscription() {
        return this.reasonUnsubscription;
    }

    public void setSuggestionUnsubscription(String suggestionUnsubscription) {
        this.suggestionUnsubscription = suggestionUnsubscription;
    }

    @Column(name = "suggestion_unsubscription", nullable = true, length = 256)
    public String getSuggestionUnsubscription() {
        return this.suggestionUnsubscription;
    }

    public void setChannelCode(String channelCode) {
        this.channelCode = channelCode;
    }

    @Column(name = "channel_code", nullable = true, length = 48)
    public String getChannelCode() {
        return channelCode;
    }

    public void setAffiliateTrackingCode(String affiliateTrackingCode) {
        this.affiliateTrackingCode = affiliateTrackingCode;
    }

    @Column(name = "affiliate_tracking_code", nullable = true, length = 48)
    public String getAffiliateTrackingCode() {
        return affiliateTrackingCode;
    }

    @Column(name = "dnd")
    public boolean isDnd() {
        return dnd;
    }

    public void setDnd(boolean dnd) {
        this.dnd = dnd;
    }

    @Column(name = "invalid")
    public boolean isInvalid() {
        return invalid;
    }

    public void setInvalid(boolean invalid) {
        this.invalid = invalid;
    }

    /**
     * @return the customer
     */
    @Column(name = "customer")
    public boolean isCustomer() {
        return customer;
    }

    /**
     * @param customer the customer to set
     */
    public void setCustomer(boolean customer) {
        this.customer = customer;
    }

    /**
     * @return the updated
     */
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated", updatable = false, insertable = false)
    public Date getUpdated() {
        return updated;
    }

    /**
     * @param updated the updated to set
     */
    public void setUpdated(Date updated) {
        this.updated = updated;
    }

}
